# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

'.source.python':
    'python file head':
        'prefix': 'ph'
        'body':'''
        #!/usr/bin/env python3
        # -*- coding: utf-8 -*-
        #
        #
        #  Copyright 2018 Ulric Yang <yangrui@posbao.net>
        #
        #  This program is free software: you can redistribute it and-or modify
        #  it under the terms of the GNU General Public License as published by
        #  the Free Software Foundation: either version 2 of the License, or
        #  (at your option) any later version.
        #
        #  This program is distributed in the hope that it will be useful,
        #  but WITHOUT ANY WARRANTY: without even the implied warranty of
        #  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        #  GNU General Public License for more details.
        #
        #  You should have received a copy of the GNU General Public License
        #  along with this program: if not, write to the Free Software
        #  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
        #  MA 02110-1301, USA.
        #
        #                    _ooOoo_
        #                   o8888888o
        #                   88" . "88
        #                   (| -_- |)
        #                    O* = *O
        #                ____*'---'*____
        #              .   ' **| |** '.
        #               * **||| : |||** *
        #             * _||||| -:- |||||- *
        #               | | *** - *** | |
        #             | *_| ''*---*'' | |
        #              * .-*__ '-' ___*-. *
        #           ___'. .' *--.--* '. . __
        #        ."" '< '.___*_<|>_*___.' >'"".
        #       | | : '- *'.:'* _ *':.'* - ' : | |
        #         * * '-. *_ __* *__ _* .-' * *
        # ======'-.____'-.___*_____*___.-'____.-'======
        #                    '=---='
        # .............................................

        # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        # PURPOSE:
        #
        #
        # USAGE:
        #
        #
        # CAUTION:
        #
        #
        # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

        # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        # LIBRARY
        # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        import logging
        import os
        import sys

        try:
            from prettyprinter import cpprint as ppt
        except Exception as e:
            from pprint import pprint as ppt


        # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        # CONSTANT
        # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        # logger
        # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        logfilename = os.path.splitext(__file__)[0]
        logger = logging.getLogger(logfilename + ".log")
        fhandler = logging.FileHandler(logfilename + ".log")
        shandler = logging.StreamHandler()
        fmt = " - ".join(
            [
                "%(asctime)s",
                "%(pathname)s:%(module)s:%(funcName)s",
                "%(lineno)s",
                "%(message)s",
            ]
        )
        formatter = logging.Formatter(fmt)
        fhandler.setFormatter(formatter)
        shandler.setFormatter(formatter)
        logger.addHandler(fhandler)
        logger.addHandler(shandler)
        logger.setLevel(logging.INFO)


        # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        # LOGIC
        # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        # ================================================================
        # PURPOSE：
        # ================================================================


        # ----------------------------------------------------------------
        # FUNCTION:
        # PARAMETERS:
        # RESULT:
        # ----------------------------------------------------------------


        # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        # MAIN
        # <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        def main(args):
            return 0

        if __name__ == "__main__":
            sys.exit(main(sys.argv))
        '''

    'python class separator':
        'prefix': 'pcs'
        'body': '''
        # ================================================================
        # PURPOSE：
        # ================================================================
        '''

    'python method separator':
        'prefix': 'pms'
        'body': '''
        # ----------------------------------------------------------------
        # METHOD:
        # PARAMETERS:
        # RESULT:
        # ----------------------------------------------------------------
        '''

    'python function separator':
        'prefix': 'pfs'
        'body': '''
        # -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        # FUNCTION:
        # PARAMETERS:
        # RESULT:
        # -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        '''

    'python separator normal':
        'prefix': 'psn'
        'body': '''
        # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        #
        # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        '''

    'python separator large':
        'prefix': 'psl'
        'body': '''
        # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
        #
        # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
        '''

    'python separator small':
        'prefix': 'pss'
        'body': '''
        # ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
        #
        # ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
        '''

    'python separator x':
        'prefix': 'psx'
        'body': '''
        # + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
        #
        # + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
        '''

    'python separator y':
        'prefix': 'psy'
        'body': '''
        # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        #
        # * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        '''

    'python separator z':
        'prefix': 'psz'
        'body': '''
        # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
        #
        # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
        '''

    'python separator':
        'prefix': 'ps'
        'body':'''
        # **=--=*=--=*=--=*=--=*=--=*=--=*=--=*=--=*=--=*=--=*=--=*=--=**
        '''
